package tests;

import syntaxtree.*;
import visitor.*;
public class Main2
{
    public static void main(String[] args)
    {
        VarDeclList v2 = new VarDeclList();
        v2.add(new FormalDecl(497,new ArrayType(488,new IdentifierType(488,"String")),"args"));
        ExpList v4 = new ExpList();
        v4.add(new IdentifierExp(576,"args"));
        ExpList v5 = new ExpList();
        v5.add(new False(651));
        StatementList v3 = new StatementList();
        v3.add(new LocalDeclStatement(520,new LocalVarDecl(520,new IdentifierType(514,"Main2"),"mainObj",new NewObject(530,new IdentifierType(530,"Main2")))));
        v3.add(new CallStatement(559,new Call(559,new IdentifierExp(551,"mainObj"),"parseCommandLine",v4)));
        v3.add(new Assign(608,new InstVarAccess(598,new IdentifierExp(591,"mainObj"),"errorMsg"),new NewObject(610,new IdentifierType(610,"ErrorMsg"))));
        v3.add(new CallStatement(642,new Call(642,new IdentifierExp(634,"mainObj"),"execMain",v5)));
        VarDeclList v6 = new VarDeclList();
        v6.add(new FormalDecl(699,new IntegerType(695),"useTerminal"));
        ExpList v8 = new ExpList();
        ExpList v9 = new ExpList();
        ExpList v10 = new ExpList();
        ExpList v11 = new ExpList();
        v11.add(new IdentifierExp(888,"ast"));
        ExpList v12 = new ExpList();
        StatementList v7 = new StatementList();
        v7.add(new CallStatement(731,new Call(731,new This(726),"openFiles",v8)));
        v7.add(new LocalDeclStatement(764,new LocalVarDecl(764,new IdentifierType(756,"AstNode"),"ast",new Call(775,new This(770),"parseFile",v9))));
        v7.add(new CallStatement(805,new Call(805,new This(800),"printSummaryMessage",v10)));
        v7.add(new CallStatement(881,new Call(881,new This(876),"genAst",v11)));
        v7.add(new CallStatement(911,new Call(911,new This(906),"closeFiles",v12)));
        VarDeclList v13 = new VarDeclList();
        StatementList v14 = new StatementList();
        VarDeclList v15 = new VarDeclList();
        v15.add(new FormalDecl(1039,new ArrayType(1030,new IdentifierType(1030,"String")),"args"));
        ExpList v20 = new ExpList();
        ExpList v22 = new ExpList();
        v22.add(new Plus(1215,new Plus(1211,new StringLiteral(1190,"Illegal argument: '"),new IdentifierExp(1212,"arg")),new StringLiteral(1216,"'")));
        StatementList v21 = new StatementList();
        v21.add(new CallStatement(1180,new Call(1180,new This(1180),"exitError",v22)));
        ExpList v23 = new ExpList();
        v23.add(new IntegerLiteral(1268,0));
        ExpList v25 = new ExpList();
        v25.add(new StringLiteral(1316,"-w"));
        ExpList v27 = new ExpList();
        v27.add(new IntegerLiteral(1414,2));
        v27.add(new StringLiteral(1409,":"));
        ExpList v28 = new ExpList();
        ExpList v30 = new ExpList();
        StatementList v29 = new StatementList();
        v29.add(new Assign(1545,new IdentifierExp(1535,"endIntPos"),new Call(1551,new IdentifierExp(1547,"arg"),"size",v30)));
        StatementList v31 = new StatementList();
        v31.add(new Assign(1646,new IdentifierExp(1632,"startColorPos"),new Plus(1658,new IdentifierExp(1648,"endIntPos"),new IntegerLiteral(1660,1))));
        ExpList v32 = new ExpList();
        v32.add(new IdentifierExp(1739,"endIntPos"));
        v32.add(new IntegerLiteral(1736,2));
        ExpList v33 = new ExpList();
        v33.add(new IdentifierExp(1804,"startColorPos"));
        ExpList v34 = new ExpList();
        v34.add(new IdentifierExp(1868,"intPart"));
        StatementList v35 = new StatementList();
        ExpList v36 = new ExpList();
        v36.add(new IntegerLiteral(2010,16));
        v36.add(new IdentifierExp(1999,"colorPart"));
        StatementList v26 = new StatementList();
        v26.add(new Assign(1350,new IdentifierExp(1345,"mode"),new IdentifierExp(1352,"WINDOW")));
        v26.add(new LocalDeclStatement(1384,new LocalVarDecl(1384,new IntegerType(1380),"endIntPos",new Call(1401,new IdentifierExp(1397,"arg"),"indexOf",v27))));
        v26.add(new LocalDeclStatement(1442,new LocalVarDecl(1442,new IntegerType(1438),"startColorPos",new Call(1462,new IdentifierExp(1458,"arg"),"size",v28))));
        v26.add(new If(1490,new LessThan(1504,new IdentifierExp(1494,"endIntPos"),new IntegerLiteral(1506,0)),new Block(1509,v29),new Block(1606,v31)));
        v26.add(new LocalDeclStatement(1712,new LocalVarDecl(1712,new IdentifierType(1705,"String"),"intPart",new Call(1726,new IdentifierExp(1722,"arg"),"substring",v32))));
        v26.add(new LocalDeclStatement(1778,new LocalVarDecl(1778,new IdentifierType(1771,"String"),"colorPart",new Call(1794,new IdentifierExp(1790,"arg"),"substring",v33))));
        v26.add(new Assign(1849,new IdentifierExp(1840,"fontSize"),new Call(1859,new IdentifierExp(1851,"Integer"),"parseInt",v34)));
        v26.add(new If(1898,new Not(1911,new GreaterThan(1911,new IdentifierExp(1902,"fontSize"),new IntegerLiteral(1914,0))),new Assign(1926,new IdentifierExp(1917,"fontSize"),new IdentifierExp(1928,"DEFAULT_FONT_SIZE")),new Block(1967,v35)));
        v26.add(new LocalDeclStatement(1971,new LocalVarDecl(1971,new IntegerType(1967),"colorNum",new Call(1990,new IdentifierExp(1982,"Integer"),"parseInt",v36))));
        v26.add(new Assign(2041,new IdentifierExp(2035,"color"),new NewObject(2043,new IdentifierType(2043,"Color"))));
        ExpList v37 = new ExpList();
        v37.add(new StringLiteral(2110,"-pp"));
        StatementList v38 = new StatementList();
        v38.add(new Assign(2145,new IdentifierExp(2140,"mode"),new IdentifierExp(2147,"PRINT")));
        v38.add(new Assign(2186,new IdentifierExp(2174,"prettyPrint"),new True(2188)));
        ExpList v39 = new ExpList();
        ExpList v41 = new ExpList();
        v41.add(new IntegerLiteral(2295,1));
        ExpList v43 = new ExpList();
        v43.add(new StringLiteral(2888,"No file name after '-a'"));
        StatementList v44 = new StatementList();
        ExpList v45 = new ExpList();
        ExpList v47 = new ExpList();
        v47.add(new StringLiteral(3468,"No output file specified after '-o'"));
        StatementList v46 = new StatementList();
        v46.add(new CallStatement(3458,new Call(3458,new This(3458),"exitError",v47)));
        StatementList v48 = new StatementList();
        ExpList v49 = new ExpList();
        v49.add(new StringLiteral(3636,"Too many output file names given"));
        StatementList v50 = new StatementList();
        ExpList v51 = new ExpList();
        v51.add(new Plus(3856,new Plus(3852,new StringLiteral(3833,"Illegal switch: '"),new IdentifierExp(3853,"arg")),new StringLiteral(3857,"'")));
        StatementList v42 = new StatementList();
        v42.add(new Case(2325,new IntegerLiteral(2330,49)));
        v42.add(new Assign(2340,new IdentifierExp(2335,"pass"),new IntegerLiteral(2342,1)));
        v42.add(new Break(2345));
        v42.add(new Case(2376,new IntegerLiteral(2381,50)));
        v42.add(new Assign(2391,new IdentifierExp(2386,"pass"),new IntegerLiteral(2393,2)));
        v42.add(new Break(2396));
        v42.add(new Case(2427,new IntegerLiteral(2432,51)));
        v42.add(new Assign(2442,new IdentifierExp(2437,"pass"),new IntegerLiteral(2444,3)));
        v42.add(new Break(2447));
        v42.add(new Case(2478,new IntegerLiteral(2483,52)));
        v42.add(new Assign(2493,new IdentifierExp(2488,"pass"),new IntegerLiteral(2495,4)));
        v42.add(new Break(2498));
        v42.add(new Case(2529,new IntegerLiteral(2534,53)));
        v42.add(new Assign(2544,new IdentifierExp(2539,"pass"),new IntegerLiteral(2546,5)));
        v42.add(new Break(2549));
        v42.add(new Case(2580,new IntegerLiteral(2585,54)));
        v42.add(new Assign(2595,new IdentifierExp(2590,"pass"),new IntegerLiteral(2597,6)));
        v42.add(new Break(2600));
        v42.add(new Case(2631,new IntegerLiteral(2636,55)));
        v42.add(new Assign(2646,new IdentifierExp(2641,"pass"),new IntegerLiteral(2648,7)));
        v42.add(new Break(2651));
        v42.add(new Case(2682,new IntegerLiteral(2687,56)));
        v42.add(new Assign(2697,new IdentifierExp(2692,"pass"),new IntegerLiteral(2699,8)));
        v42.add(new Break(2702));
        v42.add(new Case(2733,new IntegerLiteral(2738,57)));
        v42.add(new Assign(2748,new IdentifierExp(2743,"pass"),new IntegerLiteral(2750,9)));
        v42.add(new Break(2753));
        v42.add(new Case(2784,new IntegerLiteral(2789,97)));
        v42.add(new Assign(2822,new IdentifierExp(2822,"i"),new Plus(2823,new IdentifierExp(2822,"i"),new IntegerLiteral(2823,1))));
        v42.add(new If(2855,new Not(2861,new LessThan(2861,new IdentifierExp(2859,"i"),new ArrayLength(2868,new IdentifierExp(2864,"args")))),new CallStatement(2877,new Call(2877,new This(2877),"exitError",v43)),new Block(2944,v44)));
        v42.add(new Assign(2959,new IdentifierExp(2944,"appendFileName"),new ArrayLookup(2965,new IdentifierExp(2961,"args"),new IdentifierExp(2966,"i"))));
        v42.add(new Break(2998));
        v42.add(new Case(3029,new IntegerLiteral(3034,112)));
        v42.add(new Assign(3044,new IdentifierExp(3039,"mode"),new IdentifierExp(3046,"PRINT")));
        v42.add(new Assign(3065,new IdentifierExp(3053,"prettyPrint"),new False(3067)));
        v42.add(new Break(3074));
        v42.add(new Case(3105,new IntegerLiteral(3110,119)));
        v42.add(new Assign(3148,new IdentifierExp(3143,"mode"),new IdentifierExp(3150,"WINDOW")));
        v42.add(new Assign(3199,new IdentifierExp(3190,"fontSize"),new IdentifierExp(3201,"DEFAULT_FONT_SIZE")));
        v42.add(new Assign(3254,new IdentifierExp(3248,"color"),new Call(3256,new This(3256),"defaultColor",v45)));
        v42.add(new Break(3300));
        v42.add(new Case(3331,new IntegerLiteral(3336,111)));
        v42.add(new Assign(3369,new IdentifierExp(3369,"i"),new Plus(3370,new IdentifierExp(3369,"i"),new IntegerLiteral(3370,1))));
        v42.add(new If(3402,new Not(3408,new LessThan(3408,new IdentifierExp(3406,"i"),new ArrayLength(3415,new IdentifierExp(3411,"args")))),new Block(3424,v46),new Block(3566,v48)));
        v42.add(new If(3566,new Not(3585,new Equals(3585,new IdentifierExp(3570,"outputFileName"),new Null(3588))),new CallStatement(3626,new Call(3626,new This(3626),"exitError",v49)),new Block(3701,v50)));
        v42.add(new Assign(3716,new IdentifierExp(3701,"outputFileName"),new ArrayLookup(3722,new IdentifierExp(3718,"args"),new IdentifierExp(3723,"i"))));
        v42.add(new Break(3755));
        v42.add(new Default(3786));
        v42.add(new CallStatement(3823,new Call(3823,new This(3823),"exitError",v51)));
        v42.add(new Break(3887));
        StatementList v40 = new StatementList();
        v40.add(new Switch(2276,new Call(2288,new IdentifierExp(2284,"arg"),"charAt",v41),v42));
        StatementList v52 = new StatementList();
        StatementList v24 = new StatementList();
        v24.add(new If(1297,new Call(1305,new IdentifierExp(1301,"arg"),"startsWith",v25),new Block(1323,v26),new If(2095,new Call(2103,new IdentifierExp(2099,"arg"),"equals",v37),new Block(2118,v38),new If(2233,new Equals(2248,new Call(2241,new IdentifierExp(2237,"arg"),"size",v39),new IntegerLiteral(2251,2)),new Block(2254,v40),new Block(3946,v52)))));
        ExpList v54 = new ExpList();
        v54.add(new StringLiteral(4020,"Too many input file names given"));
        StatementList v55 = new StatementList();
        StatementList v53 = new StatementList();
        v53.add(new If(3983,new Not(4001,new Equals(4001,new IdentifierExp(3987,"inputFileName"),new Null(4004))),new CallStatement(4010,new Call(4010,new This(4010),"exitError",v54)),new Block(4072,v55)));
        v53.add(new Assign(4086,new IdentifierExp(4072,"inputFileName"),new IdentifierExp(4088,"arg")));
        StatementList v19 = new StatementList();
        v19.add(new LocalDeclStatement(1114,new LocalVarDecl(1114,new IdentifierType(1107,"String"),"arg",new ArrayLookup(1124,new IdentifierExp(1120,"args"),new IdentifierExp(1125,"i")))));
        v19.add(new If(1141,new Equals(1156,new Call(1149,new IdentifierExp(1145,"arg"),"size",v20),new IntegerLiteral(1159,0)),new Block(1162,v21),new If(1253,new Equals(1271,new Call(1261,new IdentifierExp(1257,"arg"),"charAt",v23),new IntegerLiteral(1274,45)),new Block(1279,v24),new Block(3965,v53))));
        StatementList v18 = new StatementList();
        v18.add(new Block(1093,v19));
        v18.add(new Assign(1088,new IdentifierExp(1088,"i"),new Plus(1089,new IdentifierExp(1088,"i"),new IntegerLiteral(1089,1))));
        StatementList v17 = new StatementList();
        v17.add(new LocalDeclStatement(1064,new LocalVarDecl(1064,new IntegerType(1060),"i",new IntegerLiteral(1068,0))));
        v17.add(new While(1055,new LessThan(1073,new IdentifierExp(1071,"i"),new ArrayLength(1079,new IdentifierExp(1075,"args"))),new Block(1055,v18)));
        ExpList v56 = new ExpList();
        v56.add(new StringLiteral(4162,"No input file name given"));
        StatementList v57 = new StatementList();
        StatementList v16 = new StatementList();
        v16.add(new Block(1055,v17));
        v16.add(new If(4125,new Equals(4143,new IdentifierExp(4129,"inputFileName"),new Null(4146)),new CallStatement(4152,new Call(4152,new This(4152),"exitError",v56)),new Block(4195,v57)));
        VarDeclList v58 = new VarDeclList();
        StatementList v60 = new StatementList();
        v60.add(new LocalDeclStatement(4397,new LocalVarDecl(4397,new IdentifierType(4384,"OutputStream"),"os",new NewObject(4402,new IdentifierType(4402,"FileOutputStream")))));
        v60.add(new Assign(4455,new IdentifierExp(4442,"outputStream"),new NewObject(4457,new IdentifierType(4457,"PrintStream"))));
        StatementList v61 = new StatementList();
        StatementList v62 = new StatementList();
        v62.add(new Assign(4553,new IdentifierExp(4540,"appendStream"),new NewObject(4555,new IdentifierType(4555,"FileInputStream"))));
        StatementList v63 = new StatementList();
        StatementList v59 = new StatementList();
        v59.add(new Assign(4270,new IdentifierExp(4258,"inputStream"),new NewObject(4272,new IdentifierType(4272,"FileInputStream"))));
        v59.add(new Assign(4316,new IdentifierExp(4303,"outputStream"),new InstVarAccess(4324,new IdentifierExp(4318,"System"),"out")));
        v59.add(new If(4338,new Not(4357,new Equals(4357,new IdentifierExp(4342,"outputFileName"),new Null(4360))),new Block(4366,v60),new Block(4494,v61)));
        v59.add(new If(4494,new Not(4513,new Equals(4513,new IdentifierExp(4498,"appendFileName"),new Null(4516))),new Block(4522,v62),new Block(4585,v63)));
        VarDeclList v64 = new VarDeclList();
        ExpList v66 = new ExpList();
        v66.add(new False(4961));
        v66.add(new IntegerLiteral(4959,0));
        v66.add(new IdentifierExp(4947,"inputStream"));
        ExpList v68 = new ExpList();
        v68.add(new StringLiteral(5061,"Error detected during scanning"));
        v68.add(new Minus(5057,new IntegerLiteral(5057,0),new IntegerLiteral(5058,1)));
        StatementList v67 = new StatementList();
        v67.add(new CallStatement(5051,new Call(5051,new IdentifierExp(5042,"errorMsg"),"error",v68)));
        StatementList v69 = new StatementList();
        ExpList v70 = new ExpList();
        ExpList v71 = new ExpList();
        v71.add(new False(5445));
        v71.add(new IntegerLiteral(5443,0));
        v71.add(new IdentifierExp(5440,"is"));
        ExpList v72 = new ExpList();
        StatementList v65 = new StatementList();
        v65.add(new LocalDeclStatement(4676,new LocalVarDecl(4676,new IdentifierType(4654,"ByteArrayOutputStream"),"os",new NewObject(4681,new IdentifierType(4681,"ByteArrayOutputStream")))));
        v65.add(new LocalDeclStatement(4809,new LocalVarDecl(4809,new IdentifierType(4800,"ErrorMsg"),"scannerErrorObject",new NewObject(4830,new IdentifierType(4830,"ErrorMsg")))));
        v65.add(new LocalDeclStatement(4872,new LocalVarDecl(4872,new IdentifierType(4862,"MJScanner"),"scanner",new NewObject(4882,new IdentifierType(4882,"MJScanner")))));
        v65.add(new CallStatement(4941,new Call(4941,new NewObject(4915,new IdentifierType(4915,"MJScannerParseTable")),"parse",v66)));
        v65.add(new If(4986,new InstVarAccess(5008,new IdentifierExp(4990,"scannerErrorObject"),"anyErrors"),new Block(5020,v67),new Block(5130,v69)));
        v65.add(new CallStatement(5133,new Call(5133,new IdentifierExp(5130,"os"),"close",v70)));
        v65.add(new LocalDeclStatement(5238,new LocalVarDecl(5238,new IdentifierType(5228,"MJGrammar"),"mj",new NewObject(5243,new IdentifierType(5243,"MJGrammar")))));
        v65.add(new LocalDeclStatement(5315,new LocalVarDecl(5315,new IdentifierType(5294,"ByteArrayInputStream"),"is",new NewObject(5320,new IdentifierType(5320,"ByteArrayInputStream")))));
        v65.add(new CallStatement(5434,new Call(5434,new NewObject(5408,new IdentifierType(5408,"MJGrammarParseTable")),"parse",v71)));
        v65.add(new CallStatement(5472,new Call(5472,new IdentifierExp(5469,"is"),"close",v72)));
        ExpList v73 = new ExpList();
        VarDeclList v74 = new VarDeclList();
        StatementList v78 = new StatementList();
        ExpList v81 = new ExpList();
        StatementList v82 = new StatementList();
        ExpList v83 = new ExpList();
        v83.add(new IdentifierExp(5841,"b"));
        StatementList v80 = new StatementList();
        v80.add(new LocalDeclStatement(5739,new LocalVarDecl(5739,new IntegerType(5735),"b",new Call(5756,new IdentifierExp(5743,"appendStream"),"read",v81))));
        v80.add(new If(5784,new LessThan(5790,new IdentifierExp(5788,"b"),new IntegerLiteral(5792,0)),new Break(5795),new Block(5822,v82)));
        v80.add(new CallStatement(5835,new Call(5835,new IdentifierExp(5822,"outputStream"),"write",v83)));
        StatementList v84 = new StatementList();
        StatementList v79 = new StatementList();
        v79.add(new Block(5713,v80));
        v79.add(new Block(5711,v84));
        StatementList v77 = new StatementList();
        v77.add(new Block(5709,v78));
        v77.add(new While(5704,new True(5710),new Block(5704,v79)));
        StatementList v76 = new StatementList();
        v76.add(new Block(5704,v77));
        StatementList v85 = new StatementList();
        StatementList v75 = new StatementList();
        v75.add(new If(5623,new And(5671,new And(5647,new Not(5627,new InstVarAccess(5636,new IdentifierExp(5628,"errorMsg"),"anyErrors")),new Not(5663,new Equals(5663,new IdentifierExp(5650,"appendStream"),new Null(5666)))),new Not(5679,new LessThan(5679,new IdentifierExp(5674,"pass"),new IntegerLiteral(5682,10)))),new Block(5686,v76),new Block(5877,v85)));
        VarDeclList v86 = new VarDeclList();
        ExpList v88 = new ExpList();
        StatementList v89 = new StatementList();
        ExpList v90 = new ExpList();
        StatementList v91 = new StatementList();
        ExpList v92 = new ExpList();
        StatementList v93 = new StatementList();
        StatementList v87 = new StatementList();
        v87.add(new If(5931,new Not(5947,new Equals(5947,new IdentifierExp(5935,"inputStream"),new Null(5950))),new CallStatement(5968,new Call(5968,new IdentifierExp(5956,"inputStream"),"close",v88)),new Block(5989,v89)));
        v87.add(new If(5989,new Not(6006,new Equals(6006,new IdentifierExp(5993,"outputStream"),new Null(6009))),new CallStatement(6028,new Call(6028,new IdentifierExp(6015,"outputStream"),"close",v90)),new Block(6049,v91)));
        v87.add(new If(6049,new Not(6066,new Equals(6066,new IdentifierExp(6053,"appendStream"),new Null(6069))),new CallStatement(6088,new Call(6088,new IdentifierExp(6075,"appendStream"),"close",v92)),new Block(6101,v93)));
        VarDeclList v94 = new VarDeclList();
        ExpList v97 = new ExpList();
        v97.add(new Plus(6252,new Plus(6238,new StringLiteral(6213,"Compilation failed for "),new IdentifierExp(6239,"inputFileName")),new StringLiteral(6253,".")));
        StatementList v96 = new StatementList();
        v96.add(new CallStatement(6205,new Call(6205,new InstVarAccess(6200,new IdentifierExp(6194,"System"),"err"),"println",v97)));
        ExpList v99 = new ExpList();
        v99.add(new Plus(6358,new Plus(6344,new StringLiteral(6315,"Compilation successful for "),new IdentifierExp(6345,"inputFileName")),new StringLiteral(6359,".")));
        StatementList v98 = new StatementList();
        v98.add(new CallStatement(6307,new Call(6307,new InstVarAccess(6302,new IdentifierExp(6296,"System"),"err"),"println",v99)));
        StatementList v95 = new StatementList();
        v95.add(new If(6156,new InstVarAccess(6168,new IdentifierExp(6160,"errorMsg"),"anyErrors"),new Block(6180,v96),new Block(6282,v98)));
        VarDeclList v100 = new VarDeclList();
        v100.add(new FormalDecl(6417,new IdentifierType(6409,"AstNode"),"ast"));
        ExpList v103 = new ExpList();
        v103.add(new IdentifierExp(6511,"gen"));
        ExpList v102 = new ExpList();
        v102.add(new Call(6504,new IdentifierExp(6500,"ast"),"accept",v103));
        StatementList v101 = new StatementList();
        v101.add(new LocalDeclStatement(6446,new LocalVarDecl(6446,new IdentifierType(6432,"ASTGenVisitor"),"gen",new NewObject(6452,new IdentifierType(6452,"ASTGenVisitor")))));
        v101.add(new CallStatement(6492,new Call(6492,new InstVarAccess(6487,new IdentifierExp(6481,"System"),"out"),"println",v102)));
        VarDeclList v104 = new VarDeclList();
        v104.add(new FormalDecl(6559,new IdentifierType(6551,"AstNode"),"ast"));
        ExpList v108 = new ExpList();
        v108.add(new IdentifierExp(6920,"ppv"));
        StatementList v107 = new StatementList();
        v107.add(new LocalDeclStatement(6861,new LocalVarDecl(6861,new IdentifierType(6842,"PrettyPrintVisitor"),"ppv",new NewObject(6867,new IdentifierType(6867,"PrettyPrintVisitor")))));
        v107.add(new CallStatement(6913,new Call(6913,new IdentifierExp(6909,"ast"),"accept",v108)));
        ExpList v110 = new ExpList();
        StatementList v109 = new StatementList();
        v109.add(new LocalDeclStatement(6986,new LocalVarDecl(6986,new IdentifierType(6975,"TreeDrawer"),"myObj",new NewObject(6994,new IdentifierType(6994,"TreeDrawer")))));
        v109.add(new CallStatement(7038,new Call(7038,new IdentifierExp(7032,"myObj"),"printToStream",v110)));
        StatementList v106 = new StatementList();
        v106.add(new If(6807,new IdentifierExp(6811,"prettyPrint"),new Block(6824,v107),new Block(6957,v109)));
        ExpList v112 = new ExpList();
        v112.add(new True(7204));
        StatementList v111 = new StatementList();
        v111.add(new LocalDeclStatement(7127,new LocalVarDecl(7127,new IdentifierType(7110,"TreeDisplayFrame"),"myObj",new NewObject(7151,new IdentifierType(7151,"TreeDisplayFrame")))));
        v111.add(new CallStatement(7193,new Call(7193,new IdentifierExp(7187,"myObj"),"setVisible",v112)));
        StatementList v105 = new StatementList();
        v105.add(new LocalDeclStatement(6711,new LocalVarDecl(6711,new IdentifierType(6704,"String"),"title",new StringLiteral(6719,"abstract syntax tree for "))));
        v105.add(new If(6774,new Equals(6783,new IdentifierExp(6778,"mode"),new IdentifierExp(6786,"PRINT")),new Block(6793,v106),new Block(7096,v111)));
        VarDeclList v113 = new VarDeclList();
        v113.add(new FormalDecl(7266,new IdentifierType(7259,"String"),"msg"));
        ExpList v115 = new ExpList();
        v115.add(new IdentifierExp(7300,"msg"));
        ExpList v116 = new ExpList();
        v116.add(new IntegerLiteral(7319,1));
        StatementList v114 = new StatementList();
        v114.add(new CallStatement(7292,new Call(7292,new InstVarAccess(7287,new IdentifierExp(7281,"System"),"err"),"println",v115)));
        v114.add(new CallStatement(7314,new Call(7314,new This(7314),"exit",v116)));
        VarDeclList v117 = new VarDeclList();
        v117.add(new FormalDecl(7355,new IntegerType(7351),"code"));
        ExpList v119 = new ExpList();
        v119.add(new IdentifierExp(7383,"code"));
        StatementList v118 = new StatementList();
        v118.add(new CallStatement(7378,new Call(7378,new IdentifierExp(7371,"System"),"exit",v119)));
        DeclList v1 = new DeclList();
        v1.add(new InstVarDecl(30,new IntegerType(26),"SCANNER_ONLY"));
        v1.add(new InstVarDecl(60,new IntegerType(56),"SILENT"));
        v1.add(new InstVarDecl(79,new IntegerType(75),"WINDOW"));
        v1.add(new InstVarDecl(98,new IntegerType(94),"PRINT"));
        v1.add(new InstVarDecl(121,new IntegerType(117),"DEFAULT_PASS_LIMIT"));
        v1.add(new InstVarDecl(152,new IntegerType(148),"DEFAULT_FONT_SIZE"));
        v1.add(new InstVarDecl(185,new IntegerType(181),"mode"));
        v1.add(new InstVarDecl(200,new IntegerType(196),"prettyPrint"));
        v1.add(new InstVarDecl(222,new IntegerType(218),"pass"));
        v1.add(new InstVarDecl(237,new IntegerType(233),"fontSize"));
        v1.add(new InstVarDecl(258,new IdentifierType(252,"Color"),"color"));
        v1.add(new InstVarDecl(276,new IdentifierType(269,"String"),"inputFileName"));
        v1.add(new InstVarDecl(303,new IdentifierType(296,"String"),"outputFileName"));
        v1.add(new InstVarDecl(331,new IdentifierType(324,"String"),"appendFileName"));
        v1.add(new InstVarDecl(364,new IdentifierType(352,"InputStream"),"inputStream"));
        v1.add(new InstVarDecl(394,new IdentifierType(382,"PrintStream"),"outputStream"));
        v1.add(new InstVarDecl(425,new IdentifierType(413,"InputStream"),"appendStream"));
        v1.add(new InstVarDecl(452,new IdentifierType(443,"ErrorMsg"),"errorMsg"));
        v1.add(new MethodDeclVoid(483,"main",v2,v3));
        v1.add(new MethodDeclVoid(686,"execMain",v6,v7));
        v1.add(new MethodDeclNonVoid(953,new IdentifierType(947,"Color"),"defaultColor",v13,v14,new NewObject(977,new IdentifierType(977,"Color"))));
        v1.add(new MethodDeclVoid(1013,"parseCommandLine",v15,v16));
        v1.add(new MethodDeclVoid(4219,"openFiles",v58,v59));
        v1.add(new MethodDeclNonVoid(4607,new IdentifierType(4599,"AstNode"),"parseFile",v64,v65,new Call(5558,new IdentifierExp(5555,"mj"),"parseResult",v73)));
        v1.add(new MethodDeclVoid(5600,"appendFile",v74,v75));
        v1.add(new MethodDeclVoid(5904,"closeFiles",v86,v87));
        v1.add(new MethodDeclVoid(6124,"printSummaryMessage",v94,v95));
        v1.add(new MethodDeclVoid(6402,"genAst",v100,v101));
        v1.add(new MethodDeclVoid(6540,"displayAst",v104,v105));
        v1.add(new MethodDeclVoid(7249,"exitError",v113,v114));
        v1.add(new MethodDeclVoid(7346,"exit",v117,v118));
        ClassDeclList v0 = new ClassDeclList();
        v0.add(new ClassDecl(6,"Main2","Object",v1));
        AstNode ast = new Program(0,v0);
        VarVisitor pp = new VarVisitor();
        ast.accept(pp);

        for(String var : pp.uses.keySet())
        {
            System.out.println(var + " : " + pp.uses.get(var));
        }
    }
}

